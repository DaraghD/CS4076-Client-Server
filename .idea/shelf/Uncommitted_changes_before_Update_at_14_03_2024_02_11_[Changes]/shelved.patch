Index: src/main/java/dddq/client/Client.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package dddq.client;\r\n\r\nimport javafx.application.Application;\r\nimport javafx.collections.FXCollections;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.event.EventHandler;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.layout.AnchorPane;\r\nimport javafx.scene.layout.GridPane;\r\nimport javafx.scene.text.Font;\r\nimport javafx.scene.text.FontWeight;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.*;\r\nimport java.net.InetAddress;\r\nimport java.net.Socket;\r\nimport java.net.UnknownHostException;\r\nimport java.util.ArrayList;\r\n\r\npublic class Client extends Application {\r\n    static InetAddress host;\r\n\r\n    static {\r\n        try {\r\n            host = InetAddress.getLocalHost();\r\n        } catch (UnknownHostException e) {\r\n            System.out.println(\"Host ID not found!\");\r\n            System.exit(1);\r\n        }\r\n    }\r\n\r\n    static final int PORT = 1234;\r\n    TextField moduleField = new TextField();\r\n    TextField roomField = new TextField();\r\n    Label roomLabel = new Label(\"Choose Room\");\r\n    String[] options = {\"DISPLAY\", \"ADD\", \"REMOVE\"};\r\n    ChoiceBox optionBox = new ChoiceBox(FXCollections.observableArrayList(options));\r\n    Label actionLabel = new Label(\"Select Action\");\r\n    Button stopButton = new Button(\"STOP\");\r\n    Label moduleLabel = new Label(\"Choose Module\");\r\n    Label dayLabel = new Label(\"Choose Day\");\r\n    Button sendButton = new Button(\"Send\");\r\n    AnchorPane anchorPane = new AnchorPane();\r\n    Button gridButton = new Button(\"Choose Slots\");\r\n    GridPane schedulePane = new GridPane();\r\n    Socket link;\r\n    ObjectOutputStream objectOutputStream;\r\n    ObjectInputStream objectInputStream;\r\n    static ArrayList<String> chosenTimes = new ArrayList<>();\r\n    String[] days = {\"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\"};\r\n    ChoiceBox dayBox = new ChoiceBox(FXCollections.observableArrayList(days));\r\n    static Label chosenTimesLabel = new Label(\"Chosen Times : \");\r\n\r\n    @Override\r\n    public void init() {\r\n        //initalising in  / out streams\r\n        try {\r\n            link = new Socket(host, PORT);\r\n            objectOutputStream = new ObjectOutputStream(link.getOutputStream());\r\n            objectInputStream = new ObjectInputStream(link.getInputStream());\r\n\r\n        } catch (IOException e) {\r\n            System.out.println(e + \"\\n\\n\\n\");\r\n            e.printStackTrace();\r\n        }\r\n\r\n        //Putting things into { } lets us close it to make the file smaller when viewing.\r\n        //components\r\n        {\r\n            roomLabel.setLayoutX(50);\r\n            roomLabel.setLayoutY(158);\r\n            roomLabel.setPrefHeight(38);\r\n            roomLabel.setPrefWidth(202);\r\n            roomLabel.setVisible(true);\r\n            roomLabel.setMouseTransparent(true);\r\n\r\n\r\n            roomField.setPrefWidth(119);\r\n            roomField.setPrefHeight(47);\r\n            roomField.setLayoutX(31);\r\n            roomField.setLayoutY(150);\r\n\r\n\r\n\r\n            chosenTimesLabel.setLayoutY(200);\r\n            chosenTimesLabel.setFont(Font.font(\"Arial\", FontWeight.EXTRA_BOLD, 20));\r\n\r\n            dayBox.setLayoutX(386);\r\n            dayBox.setLayoutY(31);\r\n            dayBox.setPrefHeight(38);\r\n            dayBox.setPrefWidth(202);\r\n            dayBox.setVisible(true);\r\n\r\n            optionBox.setLayoutX(31);\r\n            optionBox.setLayoutY(31);\r\n            optionBox.setPrefHeight(38);\r\n            optionBox.setPrefWidth(148);\r\n\r\n            sendButton.setLayoutX(240);\r\n            sendButton.setLayoutY(325);\r\n            sendButton.setPrefWidth(119);\r\n            sendButton.setPrefHeight(47);\r\n\r\n            gridButton.setLayoutX(31);\r\n            gridButton.setLayoutY(325);\r\n            gridButton.setPrefWidth(119);\r\n            gridButton.setPrefHeight(47);\r\n\r\n            moduleField.setLayoutX(194);\r\n            moduleField.setLayoutY(31);\r\n            moduleField.setPrefHeight(38);\r\n            moduleField.setPrefWidth(177);\r\n\r\n            stopButton.setStyle(\"-fx-background-color: #ea2727\");\r\n            stopButton.setPrefWidth(119);\r\n            stopButton.setPrefHeight(47);\r\n            stopButton.setLayoutX(453);\r\n            stopButton.setLayoutY(325);\r\n\r\n            actionLabel.setLayoutX(37.0);\r\n            actionLabel.setLayoutY(31.0);\r\n            actionLabel.setPrefHeight(38.0);\r\n            actionLabel.setPrefWidth(134.0);\r\n            actionLabel.setMouseTransparent(true);\r\n\r\n            moduleLabel.setLayoutX(207.0);\r\n            moduleLabel.setLayoutY(31.0);\r\n            moduleLabel.setPrefHeight(38.0);\r\n            moduleLabel.setPrefWidth(134.0);\r\n            moduleLabel.setMouseTransparent(true);\r\n\r\n            dayBox.setLayoutX(404.0);\r\n            dayBox.setLayoutY(31.0);\r\n            dayBox.setPrefHeight(38.0);\r\n            dayBox.setPrefWidth(134.0);\r\n\r\n            dayLabel.setLayoutX(404.0);\r\n            dayLabel.setLayoutY(31.0);\r\n            dayLabel.setPrefHeight(38.0);\r\n            dayLabel.setPrefWidth(134.0);\r\n            dayLabel.setMouseTransparent(true);\r\n        }\r\n\r\n        //Listeners / event handlers scope\r\n        {\r\n\r\n            roomField.textProperty().addListener((observable, oldValue, newValue) -> {\r\n                if (!newValue.isEmpty()) {\r\n                    roomLabel.setVisible(false); // Hide the label\r\n                } else {\r\n                    roomLabel.setVisible(true); // Show the label\r\n                }\r\n            });\r\n\r\n            moduleField.textProperty().addListener((observable, oldValue, newValue) -> {\r\n                if (!newValue.isEmpty()) {\r\n                    moduleLabel.setVisible(false); // Hide the label\r\n                } else {\r\n                    moduleLabel.setVisible(true); // Show the label\r\n                }\r\n            });\r\n\r\n            optionBox.getSelectionModel().selectedIndexProperty().addListener((ov, value, new_value) -> {\r\n                actionLabel.setVisible(false);\r\n                // methods here to show different buttons depending on new_value e.g if display -> dont need to show room field or choose time etc.\r\n\r\n            });\r\n\r\n            //viewing schedules button\r\n            gridButton.setOnAction(actionEvent -> {\r\n                if (dayBox.getValue() == null) {\r\n                    Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n                    alert.setTitle(\"Viewing Schedule Error\");\r\n                    alert.setHeaderText(null);\r\n                    alert.setContentText(\"You must select a day before viewing schedule\");\r\n                    alert.showAndWait();\r\n                } else {\r\n                    try {\r\n                        String module = moduleField.getText();\r\n                        chosenTimes = new ArrayList<>(); // Clearing arraylist, if they choose times then reopen schedule- it resets chosen times.\r\n                        Message message = new Message(\"VIEW\");\r\n                        message.setDay(dayBox.getValue().toString());\r\n                        objectOutputStream.writeObject(message);\r\n                        objectOutputStream.flush();\r\n                        System.out.println(dayBox.getValue().toString());\r\n\r\n                        Message timesMessage = (Message) objectInputStream.readObject();\r\n                        //schedule should show red for rooms booked at that time, aswell as classes of the same module\r\n                        Stage scheduleStage = new Stage();\r\n                        GridPane scheduleGrid = ScheduleStage.createButtonGrid(timesMessage.getListOfTimes());\r\n                        Scene scheduleScene = new Scene(scheduleGrid, 400, 300);\r\n                        scheduleStage.setScene(scheduleScene);\r\n                        scheduleStage.show();\r\n\r\n                    } catch (IOException | ClassNotFoundException e) {\r\n                        System.out.println(\"Couldnt send object\");\r\n                        e.printStackTrace();\r\n                    }\r\n                }\r\n            });\r\n\r\n\r\n            stopButton.setOnAction(actionEvent -> {\r\n                try {\r\n                    objectOutputStream.writeObject(new Message(\"STOP\"));\r\n\r\n                    Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n                    alert.setTitle(\"Stop Alert\");\r\n                    alert.setHeaderText(null);\r\n                    Message response = (Message) objectInputStream.readObject();\r\n\r\n                    alert.setContentText(response.getOPTION() + \" \" + response.getCONTENTS());\r\n                    alert.showAndWait();\r\n                    System.exit(1);\r\n\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            });\r\n\r\n            sendButton.setOnAction(t -> {\r\n                // check all fields / buttons make sure they are all filled out. Trigger popup and break/ return if not\r\n                try {\r\n                    Message message = new Message(optionBox.getValue().toString());\r\n                    for (String time : chosenTimes) {\r\n                        message.addTime(time);\r\n                    }\r\n                    message.setDay(dayBox.getValue().toString());\r\n                    message.setROOM_NUMBER(roomField.getText());\r\n                    message.setMODULE_NAME(moduleField.getText());\r\n\r\n                    objectOutputStream.writeObject(message);\r\n                    Message response = (Message) objectInputStream.readObject();\r\n                    //label.setText(response.getOPTION() + \" \" + response.getCONTENTS());\r\n\r\n                    Alert alert = new Alert(Alert.AlertType.INFORMATION);\r\n                    alert.setTitle(response.getOPTION());\r\n                    alert.setHeaderText(null);\r\n                    alert.setContentText(response.getCONTENTS());\r\n                    alert.showAndWait();\r\n\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            });\r\n\r\n            dayBox.setOnAction(e -> {\r\n                dayLabel.setVisible(false);\r\n            });\r\n\r\n            //eventhandler for textbox for module code , how to make it so when they are finishehd typing it updates the variable,\r\n            // maybe just pull the variable e.g textbox.gettext(), when they click send\r\n\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void start(Stage stage) throws IOException {\r\n        anchorPane.getChildren().addAll(stopButton, dayBox, optionBox, sendButton, moduleField, moduleLabel, actionLabel, gridButton, chosenTimesLabel, dayLabel, roomField,roomLabel);\r\n        Scene scene = new Scene(anchorPane, 600, 400);\r\n        stage.setScene(scene);\r\n        stage.show();\r\n    }\r\n\r\n    public static void main(String[] args) {\r\n        launch();\r\n    }\r\n\r\n    public static class submitScheduleHandler implements EventHandler<ActionEvent> {\r\n        @Override\r\n        public void handle(ActionEvent actionEvent) {\r\n            Button button = (Button) actionEvent.getSource();\r\n            Scene scene = button.getScene();\r\n            Stage stage = (Stage) scene.getWindow();\r\n            chosenTimesLabel.setText(\"Chosen Times : \" + chosenTimes.toString());\r\n            //might need some submit logic here ?>\r\n\r\n            stage.close();\r\n\r\n        }\r\n    }\r\n\r\n    // this needs to be here as it needs to access the chosenTimes arraylist\r\n    public static class buttonScheduleHandler implements EventHandler<ActionEvent> {\r\n        @Override\r\n        public void handle(ActionEvent actionEvent) {\r\n            Button button = (Button) actionEvent.getSource();\r\n            ScheduleStage.buttonData data = (ScheduleStage.buttonData) button.getUserData();\r\n\r\n            if (!data.isTaken()) {\r\n                // change colour of it\r\n                System.out.println(\"Selected  time : \" + button.getText());\r\n                if (chosenTimes.contains(button.getText())) {\r\n                    // popup here\r\n                    System.out.println(\"Already added time slot \");\r\n                } else {\r\n                    chosenTimes.add(button.getText());\r\n                    button.setStyle(\"-fx-background-color: orange; fx-text-fill:white;\");\r\n                    //orange = selected, red = taken by soemone else\r\n                }\r\n\r\n                data.click();\r\n            } else {\r\n                System.out.println(\"Time slot in use \"); // alert popup instead ?\r\n                return;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    // functions to toggle visibility of fields / buttons depending on action selected\r\n    private static void addActionFields() {\r\n\r\n    }\r\n\r\n    private static void removeActionFields() {\r\n\r\n    }\r\n\r\n    private static void displayActionFields() {\r\n\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/dddq/client/Client.java b/src/main/java/dddq/client/Client.java
--- a/src/main/java/dddq/client/Client.java	(revision cc6f3264a5b0a6bc817aa4fa1de7aaf8cc011b0f)
+++ b/src/main/java/dddq/client/Client.java	(date 1710382227011)
@@ -31,25 +31,25 @@
     }
 
     static final int PORT = 1234;
-    TextField moduleField = new TextField();
-    TextField roomField = new TextField();
-    Label roomLabel = new Label("Choose Room");
-    String[] options = {"DISPLAY", "ADD", "REMOVE"};
-    ChoiceBox optionBox = new ChoiceBox(FXCollections.observableArrayList(options));
-    Label actionLabel = new Label("Select Action");
+    static TextField moduleField = new TextField();
+    static TextField roomField = new TextField();
+    static Label roomLabel = new Label("Choose Room");
+    static String[] options = {"DISPLAY", "ADD", "REMOVE"};
+    static ChoiceBox optionBox = new ChoiceBox(FXCollections.observableArrayList(options));
+    static Label actionLabel = new Label("Select Action");
     Button stopButton = new Button("STOP");
-    Label moduleLabel = new Label("Choose Module");
-    Label dayLabel = new Label("Choose Day");
+    static Label moduleLabel = new Label("Choose Module");
+    static Label dayLabel = new Label("Choose Day");
     Button sendButton = new Button("Send");
     AnchorPane anchorPane = new AnchorPane();
-    Button gridButton = new Button("Choose Slots");
+    static Button gridButton = new Button("Choose Slots");
     GridPane schedulePane = new GridPane();
     Socket link;
     ObjectOutputStream objectOutputStream;
     ObjectInputStream objectInputStream;
     static ArrayList<String> chosenTimes = new ArrayList<>();
-    String[] days = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday"};
-    ChoiceBox dayBox = new ChoiceBox(FXCollections.observableArrayList(days));
+    static String[]  days = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday"};
+    static ChoiceBox dayBox = new ChoiceBox(FXCollections.observableArrayList(days));
     static Label chosenTimesLabel = new Label("Chosen Times : ");
 
     @Override
@@ -163,9 +163,21 @@
 
             optionBox.getSelectionModel().selectedIndexProperty().addListener((ov, value, new_value) -> {
                 actionLabel.setVisible(false);
-                // methods here to show different buttons depending on new_value e.g if display -> dont need to show room field or choose time etc.
+                String selectedOption = (String) optionBox.getItems().get(new_value.intValue());
+                switch (selectedOption) {
+                    case "ADD":
+                        addActionFields();
+                        break;
+                    case "REMOVE":
+                        removeActionFields();
+                        break;
+                    case "DISPLAY":
+                        displayActionFields();
+                        break;
+                    default:
 
-            });
+
+            }});
 
             //viewing schedules button
             gridButton.setOnAction(actionEvent -> {
@@ -311,15 +323,44 @@
 
     // functions to toggle visibility of fields / buttons depending on action selected
     private static void addActionFields() {
+        roomField.setVisible(true);
+        moduleField.setVisible(true);
+        roomLabel.setVisible(true);
+
+
+        moduleLabel.setVisible(true);
+        dayLabel.setVisible(true);
+        gridButton.setVisible(true);
+        dayBox.setVisible(true);
+        chosenTimesLabel.setVisible(true);
+
 
     }
 
     private static void removeActionFields() {
+        moduleField.setVisible(true);
+        roomField.setVisible(true);
+        roomLabel.setVisible(true);
 
+
+        moduleLabel.setVisible(true);
+        dayLabel.setVisible(true);
+        gridButton.setVisible(true);
+        dayBox.setVisible(true);
+        chosenTimesLabel.setVisible(true);
     }
 
     private static void displayActionFields() {
+        moduleField.setVisible(true);
+        roomField.setVisible(false);
+        roomLabel.setVisible(false);
 
+
+        moduleLabel.setVisible(true);
+        dayLabel.setVisible(false);
+        gridButton.setVisible(false);
+        dayBox.setVisible(false);
+        chosenTimesLabel.setVisible(false);
     }
 
 }
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"1b799b8b-bb7c-403a-ba99-e70cd29e76cd\" name=\"Changes\" comment=\"fixed error on accessing hashmaps\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n        <option value=\"FxmlFile\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"HighlightingSettingsPerFile\">\r\n    <setting file=\"file://$PROJECT_DIR$/src/main/java/dddq/client/Client.java\" root0=\"FORCE_HIGHLIGHTING\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 2\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2dF4mxUPdogVMzBHsWmDzybj4FS\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.App.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Client.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Server.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.TCPEchoServer.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.test.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;/home/daragh/CS4076/Midterm/Client/src/main/java/dddq/client&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;settings.editor.selected.configurable&quot;: &quot;preferences.pluginManager&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/src/main/java/dddq/client\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\" selected=\"Application.Client\">\r\n    <configuration name=\"Client\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"dddq.client.Client\" />\r\n      <module name=\"Client\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"dddq.server.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Server\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"dddq.server.Server\" />\r\n      <module name=\"Client\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"dddq.server.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"TCPEchoServer\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"dddq.client.TCPEchoServer\" />\r\n      <module name=\"Client\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"dddq.server.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"test\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"dddq.client.test\" />\r\n      <module name=\"Client\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"dddq.client.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Client\" />\r\n        <item itemvalue=\"Application.Server\" />\r\n        <item itemvalue=\"Application.test\" />\r\n        <item itemvalue=\"Application.TCPEchoServer\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.2-openjdk-21.0.2-4caba194b151-78a6f59c\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"1b799b8b-bb7c-403a-ba99-e70cd29e76cd\" name=\"Changes\" comment=\"\" />\r\n      <created>1709590658358</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1709590658358</updated>\r\n      <workItem from=\"1709590659426\" duration=\"12446000\" />\r\n      <workItem from=\"1709605084034\" duration=\"3135000\" />\r\n      <workItem from=\"1709608633217\" duration=\"1416000\" />\r\n      <workItem from=\"1709749425052\" duration=\"17938000\" />\r\n      <workItem from=\"1709851145510\" duration=\"4070000\" />\r\n      <workItem from=\"1710000155061\" duration=\"977000\" />\r\n      <workItem from=\"1710002333893\" duration=\"6538000\" />\r\n      <workItem from=\"1710294632814\" duration=\"9364000\" />\r\n      <workItem from=\"1710347940277\" duration=\"1171000\" />\r\n      <workItem from=\"1710373266661\" duration=\"645000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"Basic UI setup\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709610012630</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709610012631</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"can send objects back and forth, need to work on displaying schedule on popup stage,&#10;might also wanna make a builder for message class\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709679055597</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709679055597</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"added eventhandler for schedule buttons\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709694371795</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709694371795</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"up\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709737586553</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709737586553</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"created schedule stage, redid schedule class to allow for modules to be in the schedule instead of just boolean.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709755658002</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709755658002</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Can now select times, orange = selected. Need to make some test data ( persistent )\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709757582353</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709757582353</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Can now select times, orange = selected. Need to make some test data ( persistent )\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709757593179</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709757593179</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Added submit button- closes stage, and handler . Need to store dates selected on client side.\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709759395660</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709759395660</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"course + scheduleweek classes\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709951613016</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709951613016</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"fix : small error in server\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1709951933407</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1709951933407</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"refactored how we handle schedules,\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1710316351146</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1710316351146</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"12\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Basic UI setup\" />\r\n    <MESSAGE value=\"can send objects back and forth, need to work on displaying schedule on popup stage,&#10;might also wanna make a builder for message class\" />\r\n    <MESSAGE value=\"added eventhandler for schedule buttons\" />\r\n    <MESSAGE value=\"up\" />\r\n    <MESSAGE value=\"created schedule stage, redid schedule class to allow for modules to be in the schedule instead of just boolean.\" />\r\n    <MESSAGE value=\"Can now select times, orange = selected. Need to make some test data ( persistent )\" />\r\n    <MESSAGE value=\"Added submit button- closes stage, and handler . Need to store dates selected on client side.\" />\r\n    <MESSAGE value=\"course + scheduleweek classes\" />\r\n    <MESSAGE value=\"fix : small error in server\" />\r\n    <MESSAGE value=\"refactored how we handle schedules,\" />\r\n    <MESSAGE value=\"fixed error on accessing hashmaps\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"fixed error on accessing hashmaps\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision cc6f3264a5b0a6bc817aa4fa1de7aaf8cc011b0f)
+++ b/.idea/workspace.xml	(date 1710379555279)
@@ -4,8 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="1b799b8b-bb7c-403a-ba99-e70cd29e76cd" name="Changes" comment="fixed error on accessing hashmaps">
+    <list default="true" id="1b799b8b-bb7c-403a-ba99-e70cd29e76cd" name="Changes" comment="added addRoom label">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/dddq/client/Client.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/dddq/client/Client.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -69,7 +70,7 @@
       <recent name="$PROJECT_DIR$/src/main/java/dddq/client" />
     </key>
   </component>
-  <component name="RunManager" selected="Application.Client">
+  <component name="RunManager">
     <configuration name="Client" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="dddq.client.Client" />
       <module name="Client" />
@@ -124,8 +125,8 @@
     </configuration>
     <recent_temporary>
       <list>
-        <item itemvalue="Application.Client" />
         <item itemvalue="Application.Server" />
+        <item itemvalue="Application.Client" />
         <item itemvalue="Application.test" />
         <item itemvalue="Application.TCPEchoServer" />
       </list>
@@ -245,7 +246,15 @@
       <option name="project" value="LOCAL" />
       <updated>1710316351146</updated>
     </task>
-    <option name="localTasksCounter" value="12" />
+    <task id="LOCAL-00012" summary="added addRoom label">
+      <option name="closed" value="true" />
+      <created>1710378729696</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1710378729696</updated>
+    </task>
+    <option name="localTasksCounter" value="13" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -274,6 +283,7 @@
     <MESSAGE value="fix : small error in server" />
     <MESSAGE value="refactored how we handle schedules," />
     <MESSAGE value="fixed error on accessing hashmaps" />
-    <option name="LAST_COMMIT_MESSAGE" value="fixed error on accessing hashmaps" />
+    <MESSAGE value="added addRoom label" />
+    <option name="LAST_COMMIT_MESSAGE" value="added addRoom label" />
   </component>
 </project>
\ No newline at end of file
